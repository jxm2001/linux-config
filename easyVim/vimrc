" 映射配置
let mapleader=' '

" 禁用鼠标
set mouse=

" 设置行号
set number

" 自动换行
set wrap

" 显示输入
set showcmd

" 显示候选命令
set wildmenu

" 设置缩进
set tabstop=4
set softtabstop=4
set shiftwidth=4

" 快速移动
nnoremap <C-h> 5h
nnoremap <C-j> 5j
nnoremap <C-k> 5k
nnoremap <C-l> 5l
vnoremap <C-h> 5h
vnoremap <C-j> 5j
vnoremap <C-k> 5k
vnoremap <C-l> 5l

" 快速换行
nnoremap <cr> o<Esc>

" 高亮搜索
set hlsearch
set incsearch
nnoremap <silent> <leader>n :nohlsearch<cr>

" 折叠设置
nnoremap <leader>w za 
nnoremap <leader>qi :set foldmethod=indent<cr>
nnoremap <leader>qe :set foldmethod=expr<cr>
set foldmethod=indent
set foldlevel=99

" 语法高亮
syntax on

" 背景颜色
set background=dark

" 插件配置

" 设置状态栏主题
let g:airline#extensions#tabline#enabled=1
let g:airline_theme='dark'

" 缩进字符
let g:indentLine_char='┆'

" 主题颜色
set rtp+=~/.vim/plugged/vim-solarized8
colorscheme solarized8_high 

" 文件树配置
nnoremap <leader>v :NERDTreeFind<cr>
nnoremap <leader>g :NERDTreeToggle<cr>
nnoremap <leader>b :Bookmark<space>
" 显示隐藏文件
" let NERDTreeShowHidden=1
" 显示书签
let NERDTreeShowBookmarks=1
let NERDTreeIgnore= ['\.git$','\.swp$']
" 当 NERDTree 是最后一个缓冲区时自动退出
autocmd BufEnter * if winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree() | quit | endif
" 禁止其他窗口替换 NERDTree 窗口 
autocmd BufEnter * if bufname('#') =~ 'NERD_tree_\d\+' && bufname('%') !~ 'NERD_tree_\d\+' && winnr('$') > 1 |
    \ let buf=bufnr() | buffer# | execute "normal! \<C-W>w" | execute 'buffer'.buf | endif

" 文件搜索插件配置 
let g:ctrlp_map='<C-p>'
let g:ctrlp_cmd='CtrlPMixed'
" 匹配方式为文件名匹配
let g:ctrlp_by_filename = 1
" 默认搜索根目录
let g:ctrlp_working_path_mode = 'ra'

" 快速跳转
nmap <leader>f <Plug>(easymotion-overwin-f)
" nmap <leader>F <Plug>(easymotion-overwin-f2)
nmap  / <Plug>(easymotion-sn)
nmap  n <Plug>(easymotion-next)
nmap  N <Plug>(easymotion-prev)
nmap <leader>l <Plug>(easymotion-lineforward)
nmap <leader>j <Plug>(easymotion-j)
nmap <leader>k <Plug>(easymotion-k)
nmap <leader>h <Plug>(easymotion-linebackward)
let g:EasyMotion_startofline=0

" 文本替换设置
let g:far#enable_undo=1

" which-key 配置
nnoremap <silent> <leader> :WhichKey ' '<CR>

" c++ 高亮配置
let g:cpp_class_scope_highlight = 1
" let g:cpp_member_variable_highlight = 1
let g:cpp_class_decl_highlight = 1
" let g:cpp_experimental_template_highlight = 1
let g:cpp_concepts_highlight = 1
let g:cpp_no_function_highlight = 1

" 符号颜色显示
au FileType c,cpp,h,hpp,objc,objcpp,python call rainbow#load()
let g:rainbow_ctermfgs = ['lightblue', 'lightgreen', 'yellow', 'magenta', 'red', 'white']

" git 配置
set updatetime=100
let g:gitgutter_show_msg_on_hunk_jumping = 0

" oscyank 配置
nnoremap <silent> <leader>y :OSCYankRegister "<CR>
let g:oscyank_term = 'default'

" 状态列集成
set signcolumn=yes

call plug#begin()
" The default plugin directory will be as follows:
"   - Vim (Linux/macOS): '~/.vim/plugged'
"   - Vim (Windows): '~/vimfiles/plugged'
"   - Neovim (Linux/macOS/Windows): stdpath('data') . '/plugged'
" You can specify a custom plugin directory by passing it as the argument
"   - e.g. `call plug#begin('~/.vim/plugged')`
"   - Avoid using standard Vim directory names like 'plugin'
Plug 'mhinz/vim-startify'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'yggdroot/indentline'
Plug 'lifepillar/vim-solarized8'
Plug 'scrooloose/nerdtree'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'easymotion/vim-easymotion'
Plug 'tpope/vim-surround'
Plug 'brooth/far.vim'
Plug 'tpope/vim-commentary'
Plug 'liuchengxu/vim-which-key'
Plug 'octol/vim-cpp-enhanced-highlight'
Plug 'ryanoasis/vim-devicons'
Plug 'frazrepo/vim-rainbow'
Plug 'airblade/vim-gitgutter'
Plug 'ojroques/vim-oscyank'
call plug#end()
